Как описываются переменные символьного типа?
В языке программирования C#, переменные символьного типа описываются с использованием ключевого слова char. Символьная переменная может хранить один символ Unicode и обозначается одиночными кавычками. Например:
char letter = 'A';
char number = '1';
char symbol = '?';

Опишите стандартные функции для работы с символьными переменными.
C# предоставляет класс Char, включающий в себя множество статических методов для работы с символьными переменными, такие как:

IsDigit(char c) – определяет, является ли символ цифрой.
IsLetter(char c) – определяет, является ли символ буквой.
IsWhiteSpace(char c) – определяет, является ли символ пробельным символом.
IsUpper(char c) – определяет, является ли символ заглавной буквой.
IsLower(char c) – определяет, является ли символ строчной буквой.
ToUpper(char c) – преобразует символ в его верхний регистр.
ToLower(char c) – преобразует символ в его нижний регистр.

Как описываются строковые переменные?
Строковые переменные в C# описываются с использованием ключевого слова string и могут хранить последовательность символов Unicode. Строковые переменные обозначаются двойными кавычками. Например:
string greeting = "Hello, World!";
string emptyString = "";

Как записывается строковая константа?
Строковая константа в C# записывается в двойных кавычках. Например, "Hello, World!" является строковой константой. Если в строке нужно использовать двойные кавычки, они экранируются с помощью обратного слэша (\"):
string quote = "Он сказал: \"Привет!\"";

Какова максимальная длина строки?
В .NET максимальная длина строки ограничена размером памяти, доступным для объектов, — это примерно 2 гигабайта (GB) или около 1 миллиарда символов char, так как каждый char занимает 2 байта. Однако на практике этот предел может быть меньше из-за ограничений операционной системы и доступного адресного пространства.

Что общего между строкой и символьным массивом?
Строка в C# фактически представляет собой массив символов char, упорядоченных последовательно. Как и массив, строка поддерживает доступ к своим элементам (символам) по индексу и имеет свойство Length, возвращающее количество символов в строке. Однако важным отличием является то, что строки в C# неизменяемы (immutable), т.е., после создания строки её содержимое изменить нельзя, в отличие от массива символов, который можно модифицировать.